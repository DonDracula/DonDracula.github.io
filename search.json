[{"title":"[爬虫]爬取图集图片","url":"http://yoursite.com/2017/08/25/爬虫-爬取图集图片/","content":"<p>最近对爬虫感兴趣，研究了一下，并稍作总结，写成这篇教程，主要介绍：新手如何实现爬取网站图片。</p>\n<h2 id=\"1-基础环境部分\"><a href=\"#1-基础环境部分\" class=\"headerlink\" title=\"1. 基础环境部分\"></a>1. 基础环境部分</h2><h3 id=\"1-1-Python基础运行环境\"><a href=\"#1-1-Python基础运行环境\" class=\"headerlink\" title=\"1.1 Python基础运行环境\"></a>1.1 Python基础运行环境</h3><p>这里我们使用<strong>Python</strong>来写爬虫。推荐安装<strong>Anaconda</strong>(<a href=\"https://www.anaconda.com/download/\" target=\"_blank\" rel=\"external\">下载</a>)，这是一个Python的科学计算发行版本，作者打包了很多包，方便使用，并可以直接安装python2.7及python3，方便切换。<br>其中，会用到的库包有：</p>\n<h4 id=\"Requests：-urllib的升级版本，打包了全部功能并简化了使用方法。\"><a href=\"#Requests：-urllib的升级版本，打包了全部功能并简化了使用方法。\" class=\"headerlink\" title=\"Requests： urllib的升级版本，打包了全部功能并简化了使用方法。\"></a><strong>Requests</strong>： urllib的升级版本，打包了全部功能并简化了使用方法。</h4><h4 id=\"bwautifulsoup-这是一个可以从HTML或XML文件中提取数据的Python库。\"><a href=\"#bwautifulsoup-这是一个可以从HTML或XML文件中提取数据的Python库。\" class=\"headerlink\" title=\"bwautifulsoup: 这是一个可以从HTML或XML文件中提取数据的Python库。\"></a><strong>bwautifulsoup</strong>: 这是一个可以从HTML或XML文件中提取数据的Python库。</h4><h4 id=\"LXML-一个HTML的解析包，用于辅助beautifulsoup解析网页。\"><a href=\"#LXML-一个HTML的解析包，用于辅助beautifulsoup解析网页。\" class=\"headerlink\" title=\"LXML: 一个HTML的解析包，用于辅助beautifulsoup解析网页。\"></a><strong>LXML</strong>: 一个HTML的解析包，用于辅助beautifulsoup解析网页。</h4><h4 id=\"OS-上述模块都需要单独安装，这个则是系统内置模块。\"><a href=\"#OS-上述模块都需要单独安装，这个则是系统内置模块。\" class=\"headerlink\" title=\"OS: 上述模块都需要单独安装，这个则是系统内置模块。\"></a><strong>OS</strong>: 上述模块都需要单独安装，这个则是系统内置模块。</h4><h3 id=\"1-2-IDE的选择\"><a href=\"#1-2-IDE的选择\" class=\"headerlink\" title=\"1.2 IDE的选择\"></a>1.2 IDE的选择</h3><p>推荐使用PyCharm，这似乎一个很好用的PythonIDE工具。如果电脑已经存在Python环境，又需要使用anaconda的话，参照下图设置。<br><img src=\"/2017/08/25/爬虫-爬取图集图片/1.png\" alt=\"\"></p>\n<h3 id=\"1-3-安装模块\"><a href=\"#1-3-安装模块\" class=\"headerlink\" title=\"1.3 安装模块\"></a>1.3 安装模块</h3><p>打开<strong>Anaconda Prompt</strong>，在命令行中输入如下指令：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">conda install requests</div><div class=\"line\">conda install beautifulsoup4</div><div class=\"line\">conda install lxml</div><div class=\"line\"><span class=\"comment\">##或者</span></div><div class=\"line\">pip install requests</div><div class=\"line\">pip install beautifulsoup4</div><div class=\"line\">pip install lxml</div></pre></td></tr></table></figure></p>\n<p>环境配置好了，接下来开始进入正题。</p>\n<h2 id=\"2-开始爬取数据\"><a href=\"#2-开始爬取数据\" class=\"headerlink\" title=\"2. 开始爬取数据\"></a>2. 开始爬取数据</h2><h3 id=\"2-1-流程\"><a href=\"#2-1-流程\" class=\"headerlink\" title=\"2.1 流程\"></a>2.1 流程</h3><p>在写代码之前，我们需要先清楚爬取流程:</p>\n<ul>\n<li>确立爬取目标： 爬虫入口，即告诉软件要从什么地方开始获取网页，本篇以<a href=\"https://www.mzitu.com\" target=\"_blank\" rel=\"external\">某妹子网站</a>的妹子图集为目标。</li>\n<li>分析目标网页： 要爬取每个图集的图片，我们呢需要先点进图集获取每个图集的url。按<strong>F12</strong>，打开开发者模式，可以轻易看到页面元素的构成，方便我们提取需要的数据。</li>\n<li>找到资料所在的地址： 如果获取到的网页没有所需数据，但是有通往该数据页面的url，则获取这个地址url，在获取该url的页面内容。</li>\n</ul>\n<h3 id=\"2-2-代码\"><a href=\"#2-2-代码\" class=\"headerlink\" title=\"2.2 代码\"></a>2.2 代码</h3><p>实现代码及其注解如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">##导入所需库</span></div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> urllib</div><div class=\"line\"><span class=\"keyword\">import</span> random</div><div class=\"line\"> </div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">mzitu</span><span class=\"params\">()</span>:</span></div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">all_url</span><span class=\"params\">(self, url)</span>:</span></div><div class=\"line\">        html = self.request(url)</div><div class=\"line\">        all_a = BeautifulSoup(html.text, <span class=\"string\">'lxml'</span>).find(<span class=\"string\">'div'</span>, class_=<span class=\"string\">'all'</span>).find_all(<span class=\"string\">'a'</span>)</div><div class=\"line\">        <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> all_a:</div><div class=\"line\">            title = a.get_text()</div><div class=\"line\">            print(<span class=\"string\">u'开始保存：'</span>, title)</div><div class=\"line\">            path = str(title).replace(<span class=\"string\">\"?\"</span>, <span class=\"string\">'_'</span>)</div><div class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> self.mkdir(path): <span class=\"comment\">##跳过已存在的文件夹</span></div><div class=\"line\">                print(<span class=\"string\">u'已经跳过：'</span>, title)</div><div class=\"line\">                <span class=\"keyword\">continue</span></div><div class=\"line\">            href = a[<span class=\"string\">'href'</span>]</div><div class=\"line\">            self.html(href)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">html</span><span class=\"params\">(self, href)</span>:</span></div><div class=\"line\">        html = self.request(href)</div><div class=\"line\">        max_span = BeautifulSoup(html.text, <span class=\"string\">'lxml'</span>).find(<span class=\"string\">'div'</span>, class_=<span class=\"string\">'pagenavi'</span>).find_all(<span class=\"string\">'span'</span>)[<span class=\"number\">-2</span>].get_text()</div><div class=\"line\">        <span class=\"keyword\">for</span> page <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(max_span) + <span class=\"number\">1</span>):</div><div class=\"line\">            page_url = href + <span class=\"string\">'/'</span> + str(page)</div><div class=\"line\">            self.img(page_url)</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">img</span><span class=\"params\">(self, page_url)</span>:</span></div><div class=\"line\">        img_html = self.request(page_url)</div><div class=\"line\">        img_url = BeautifulSoup(img_html.text, <span class=\"string\">'lxml'</span>).find(<span class=\"string\">'div'</span>, class_=<span class=\"string\">'main-image'</span>).find(<span class=\"string\">'img'</span>)[<span class=\"string\">'src'</span>]</div><div class=\"line\">        self.save(img_url,page_url)</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save</span><span class=\"params\">(self, img_url, page_url)</span>:</span></div><div class=\"line\">        name = img_url[<span class=\"number\">-9</span>:<span class=\"number\">-4</span>]</div><div class=\"line\">        <span class=\"keyword\">try</span>:</div><div class=\"line\">            img = self.requestpic(img_url,page_url)</div><div class=\"line\">            f = open(name + <span class=\"string\">'.jpg'</span>, <span class=\"string\">'ab'</span>)</div><div class=\"line\">            f.write(img.content)</div><div class=\"line\">            f.close()</div><div class=\"line\">        <span class=\"keyword\">except</span> FileNotFoundError: <span class=\"comment\">##捕获异常，继续往下走</span></div><div class=\"line\">            print(<span class=\"string\">u'图片不存在已跳过：'</span>, img_url)</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mkdir</span><span class=\"params\">(self, path)</span>:</span> <span class=\"comment\">##这个函数创建文件夹，保存到本地</span></div><div class=\"line\">        path = path.strip()</div><div class=\"line\">        isExists = os.path.exists(os.path.join(<span class=\"string\">\"D:\\meizitu\"</span>, path))</div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isExists:</div><div class=\"line\">            print(<span class=\"string\">u'建了一个名字叫做'</span>, path, <span class=\"string\">u'的文件夹！'</span>)</div><div class=\"line\">            os.makedirs(os.path.join(<span class=\"string\">\"D:\\meizitu\"</span>, path))</div><div class=\"line\">            os.chdir(os.path.join(<span class=\"string\">\"D:\\meizitu\"</span>, path)) <span class=\"comment\">##切换到目录</span></div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></div><div class=\"line\">        <span class=\"keyword\">else</span>:</div><div class=\"line\">            print(<span class=\"string\">u'名字叫做'</span>, path, <span class=\"string\">u'的文件夹已经存在了！'</span>)</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">requestpic</span><span class=\"params\">(self, url, Referer)</span>:</span> <span class=\"comment\">##这个函数获取网页的response 然后返回</span></div><div class=\"line\">        user_agent_list = [ \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1\"</span> \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24\"</span>, \\</div><div class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24\"</span></div><div class=\"line\">        ]</div><div class=\"line\">        ua = random.choice(user_agent_list)</div><div class=\"line\">        headers = &#123;<span class=\"string\">'User-Agent'</span>: ua,<span class=\"string\">\"Referer\"</span>:Referer&#125; <span class=\"comment\">##较之前版本获取图片关键参数在这里</span></div><div class=\"line\">        content = requests.get(url, headers=headers)</div><div class=\"line\">        <span class=\"keyword\">return</span> content</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">request</span><span class=\"params\">(self, url)</span>:</span> <span class=\"comment\">##这个函数获取网页的response 然后返回</span></div><div class=\"line\">        headers = &#123;<span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1\"</span>&#125;</div><div class=\"line\">        content = requests.get(url, headers=headers)</div><div class=\"line\">        <span class=\"keyword\">return</span> content</div><div class=\"line\"> </div><div class=\"line\">Mzitu = mzitu() <span class=\"comment\">##实例化</span></div><div class=\"line\">Mzitu.all_url(<span class=\"string\">'http://www.mzitu.com/all'</span>) <span class=\"comment\">##给函数all_url传入参数  你可以当作启动爬虫（就是入口）</span></div><div class=\"line\">print(<span class=\"string\">u'恭喜您下载完成啦！'</span>)</div></pre></td></tr></table></figure></p>\n","categories":["Python"],"tags":["教程","爬虫"]},{"title":"排序算法[归并排序-MergeSort]","url":"http://yoursite.com/2017/08/17/排序算法-归并排序-MergeSort/","content":"<h2 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h2><p>给定一个序列，先将其分割成很多个不能再分的子序列，然后再分别对各个子序列进行排序，最后将子序列合并的排序算法称为归并排序(Merge Sort)。<br>其实就是在重复两个步骤：</p>\n<ul>\n<li>分割 </li>\n<li>合并</li>\n</ul>\n<h3 id=\"1-分割\"><a href=\"#1-分割\" class=\"headerlink\" title=\"1. 分割\"></a>1. 分割</h3><p>首先是第一个问题，分割该怎么分。<br>比如有一个序列:12,23,1,44,233,10,9,8。我们先分成两段:12,23,1,44和233,10,9,8，<br>发现还能继续分割成4段:12,23和1,44，以及233,10和9,8。<br>然后再分成8段:12–23–1–44和233–10–9–8。<br>这时候开始把子序列进行排序合并，由于一个元素就是有序的，所以不用排序。<br>合并成2个一个排序得到:12,23—1,44—10,233—8,9。<br>然后再合并成4个一组的序列，得到:1,12,23,44—8,9,10,233。<br>最后把这两个序列合并，得到最终排序结果:1,8,9,10,12,23,44,233。</p>\n<p>递归实现分段的代码，如下:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> first, <span class=\"keyword\">int</span> last, <span class=\"keyword\">int</span> temp[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(first &lt; last)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> mid = (first + last)/<span class=\"number\">2</span>;</div><div class=\"line\">\t\tmergeSort(a, first, mid, temp); \t<span class=\"comment\">//左</span></div><div class=\"line\">\t\tmergeSort(a, mid + <span class=\"number\">1</span>, last, temp);\t<span class=\"comment\">//右</span></div><div class=\"line\">\t\tmergeArray(a, first, mid, last, temp);\t<span class=\"comment\">//再将两个有序数列合并</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"2-合并\"><a href=\"#2-合并\" class=\"headerlink\" title=\"2. 合并\"></a>2. 合并</h3><p>现在的问题变成了怎么合并两个有序序列。思路是比较两个有序序列的第一个元素，把小的放进最终序列的结尾，并把它从原来的队列里面删掉，直到有一个序列为空为止。<br>这时候两一个序列可能还有剩余数据。由于他们本身是有序的，我们直接把他们添加到最终序列的尾部即可。<br>这样两个有序序列就合并成一个有序序列了。<br>具体代码如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">mergeArray</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> first, <span class=\"keyword\">int</span> mid, <span class=\"keyword\">int</span> last, <span class=\"keyword\">int</span> temp[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> i = first, j = mid +<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">int</span> m = mid, n = last;</div><div class=\"line\">\t<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">while</span>(i &lt;= m &amp;&amp; j &lt;= n)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i] &lt;= a[j])</div><div class=\"line\">\t\t\ttemp[k++] = a[i++];</div><div class=\"line\">\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\ttemp[k++] = a[j++];</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">while</span> (i &lt;= m)</div><div class=\"line\">\t\ttemp[k++] = a[i++];</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">while</span>(j &lt;= n)</div><div class=\"line\">\t\ttemp[k++] = a[j++];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>完整测试代码如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;  </span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;math.h&gt;  </span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;  </span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </div><div class=\"line\">      </div><div class=\"line\"><span class=\"comment\">//将有二个有序数列a[first...mid]和a[mid...last]合并。  </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">mergearray</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> first, <span class=\"keyword\">int</span> mid, <span class=\"keyword\">int</span> last, <span class=\"keyword\">int</span> temp[])</span>  </span></div><div class=\"line\">&#123;  </div><div class=\"line\">    <span class=\"keyword\">int</span> i = first, j = mid + <span class=\"number\">1</span>;  </div><div class=\"line\">    <span class=\"keyword\">int</span> m = mid,   n = last;  </div><div class=\"line\">    <span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;  </div><div class=\"line\">          </div><div class=\"line\">    <span class=\"keyword\">while</span> (i &lt;= m &amp;&amp; j &lt;= n)  </div><div class=\"line\">    &#123;  </div><div class=\"line\">        <span class=\"keyword\">if</span> (a[i] &lt;= a[j])  </div><div class=\"line\">            temp[k++] = a[i++];  </div><div class=\"line\">        <span class=\"keyword\">else</span>  </div><div class=\"line\">            temp[k++] = a[j++];  </div><div class=\"line\">    &#125;  </div><div class=\"line\">          </div><div class=\"line\">    <span class=\"keyword\">while</span> (i &lt;= m)  </div><div class=\"line\">        temp[k++] = a[i++];  </div><div class=\"line\">          </div><div class=\"line\">    <span class=\"keyword\">while</span> (j &lt;= n)  </div><div class=\"line\">        temp[k++] = a[j++];  </div><div class=\"line\">          </div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; k; i++)  </div><div class=\"line\">        a[first + i] = temp[i];  </div><div class=\"line\">&#125;  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">mergesort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> first, <span class=\"keyword\">int</span> last, <span class=\"keyword\">int</span> temp[])</span>  </span></div><div class=\"line\">&#123;  </div><div class=\"line\">    <span class=\"keyword\">if</span> (first &lt; last)  </div><div class=\"line\">    &#123;  </div><div class=\"line\">        <span class=\"keyword\">int</span> mid = (first + last) / <span class=\"number\">2</span>;  </div><div class=\"line\">        mergesort(a, first, mid, temp);    <span class=\"comment\">//左边有序  </span></div><div class=\"line\">        mergesort(a, mid + <span class=\"number\">1</span>, last, temp); <span class=\"comment\">//右边有序  </span></div><div class=\"line\">        mergearray(a, first, mid, last, temp); <span class=\"comment\">//再将二个有序数列合并  </span></div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;  </div><div class=\"line\">      </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">MergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> n)</span>  </span></div><div class=\"line\">&#123;  </div><div class=\"line\">    <span class=\"keyword\">int</span> *p = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];  </div><div class=\"line\">    <span class=\"keyword\">if</span> (p == <span class=\"literal\">NULL</span>)  </div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </div><div class=\"line\">    mergesort(a, <span class=\"number\">0</span>, n - <span class=\"number\">1</span>, p);  </div><div class=\"line\">    <span class=\"keyword\">delete</span>[] p;  </div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </div><div class=\"line\">&#125;  </div><div class=\"line\">      </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span></div><div class=\"line\">&#123;  </div><div class=\"line\"><span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,temp=<span class=\"number\">0</span>;  </div><div class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">10</span>]=&#123;<span class=\"number\">0</span>&#125;;  </div><div class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)  </div><div class=\"line\">&#123;  </div><div class=\"line\"> a[i]=rand();  </div><div class=\"line\"> <span class=\"built_in\">cout</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\" \"</span>;        </div><div class=\"line\">&#125;  </div><div class=\"line\"><span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </div><div class=\"line\">MergeSort(a,<span class=\"number\">10</span>);  </div><div class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)  </div><div class=\"line\">&#123;          </div><div class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\" \"</span>;  </div><div class=\"line\">      </div><div class=\"line\">&#125;  </div><div class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["算法","C++"],"tags":["排序算法"]},{"title":"JAVA与C及C++区别比较","url":"http://yoursite.com/2017/08/11/JAVA与C及C-区别比较/","content":"<p>互联网大红大紫，JS如日中天，作为传统C++开发工程师，一直在考虑跑去做web开发。而Java作为时下主流web开发语言，并且与我熟悉的c++也有许多相似之处，便成了我的首选。<br>于C++程序员来说，Java语法完全没有问题，可以说超过80%的结构都是一样的。但是毕竟是一门不同的语言，其惯用法和模式，所谓入乡随俗，进了Java的世界我们就要按照Java的规矩来玩。比如对象需要如何创建，两个对象如何比较，枚举类型如何使用，泛型代码如何写，并发代码在什么情况下有哪一种上层建筑来实现比较好，什么时候在代码中抛出什么样的异常，什么时候使用反射。<br>本篇主要讲讲Java和C及C++语言特征的主要区别。</p>\n<h2 id=\"1-内存分配\"><a href=\"#1-内存分配\" class=\"headerlink\" title=\"1. 内存分配\"></a>1. 内存分配</h2><p>Java中对内存的分配是动态的，JVM会自动对内存进行扫描，并对长期不用的空间作为“垃圾”进行收集，使得系统资源得到更充分的利用。按照这种机制，程序员可以不必关注内存管理问题，这使Java程序的编写变得简单明了，并且避免了由于内存管理方面的误差导致系统出问题。而C语言通过<strong>malloc()</strong>和<strong>free()</strong>这两个函数来分配和释放内存，而C++语言则是通过运算符<strong>new</strong>和<strong>delete</strong>来实现对象内存的分配和释放。</p>\n<h2 id=\"2-数据类型的长度\"><a href=\"#2-数据类型的长度\" class=\"headerlink\" title=\"2. 数据类型的长度\"></a>2. 数据类型的长度</h2><p>Java对每种数据类型都分配固定长度。如，在Java中，int类型总是32位的，而在C和C++上，对于不同的平台，同一个数据类型会分配不同的字节数，同样是int类型，会占据操作系统一个内存单元的大小，也就是说在早先16位操作系统一个内存单元是16位，所以是2个字节；32位系统一个内存单元是32位，所以是4字节；64位系统则是8个字节。这使得C语言造成不可移植性，而Java则具有跨平台性（平台无关性）。</p>\n<h2 id=\"3-指针\"><a href=\"#3-指针\" class=\"headerlink\" title=\"3. 指针\"></a>3. 指针</h2><p>在Java中，程序员无法找到指针来直接访问内存，并且增加了自动的内存管理功能，从而有效的防止了C/C++语言中指针操作失误，如野指针所造成的系统崩溃（这个以前吃过很多亏）。然而Java在虚拟机内部还是使用了指针的，只是对外人不得使用而已。这样有利于Java程序的安全。</p>\n<h2 id=\"4-继承\"><a href=\"#4-继承\" class=\"headerlink\" title=\"4. 继承\"></a>4. 继承</h2><p>C++支持多重继承，这是C++的一个特性，它允许多父类派生一个类。尽管多重继承功能很强，但其使用复杂，并且会引起许多麻烦，编译程序实现它也很不容易。Java不支持多重继承，但允许一个类继承多个接口（extends+implement），实现了C++多重继承的功能，又避免了C++的多重继承实现方式带来的诸多不便。</p>\n<h2 id=\"5-数据类型及类\"><a href=\"#5-数据类型及类\" class=\"headerlink\" title=\"5. 数据类型及类\"></a>5. 数据类型及类</h2><p>Java是完全面向对象的语言，所有函数和变量都必须是类的一部分。除了基本数据类型之外，其余的都作为类对象，包括数组。对象将数据和方法结合起来，把他们封装在类中，这样每个对象都可以实现自己的特点和行为。而C++允许将函数和变量定义为全局的。</p>\n<h2 id=\"6-操作符重载\"><a href=\"#6-操作符重载\" class=\"headerlink\" title=\"6. 操作符重载\"></a>6. 操作符重载</h2><p>Java不支持操作符重载。操作符重载别认为是C++的突出特征，在Java中虽然类大体上可以实现这样的功能，但操作符重载的方便性仍然丢失了不少。Java语言不支持操作符重载也是为了保持其语言尽可能简单。</p>\n<h2 id=\"7-预处理功能\"><a href=\"#7-预处理功能\" class=\"headerlink\" title=\"7. 预处理功能\"></a>7. 预处理功能</h2><p>Java不支持预处理功能。C/C++则在编译过程中都有一个预编译阶段，及众所周知的预处理器，如#inculde，#if，#ifndef，#progma，#define等。预处理器为开发人员提供了方便，但与Java相比，增加了编译的复杂性。Java虚拟机没有预处理器，但它提供的引入语句(import)与C++的预处理器的功能类似。</p>\n<h2 id=\"8-异常\"><a href=\"#8-异常\" class=\"headerlink\" title=\"8. 异常\"></a>8. 异常</h2><p>Java中有异常机制用于捕获异常，而C++中则没有这样现成的机制。</p>\n","categories":["JAVA","C++"],"tags":["心得"]},{"title":"[WebGL]关于canvas","url":"http://yoursite.com/2017/08/10/WebGL-关于canvas/","content":"<p>时代在进步，web是大势所趋。咱这样的传统图形学c++程序员也要与时俱进，赶上互联网的大潮。今后将写一系列在web端，计算机图形学开发的教程，并将移植以前开发的opengl项目到web端。主要使用的工具是WebGL，这是一个将javascript和OpenGL ES结合，使Web开发人员可以借助系统显卡，在浏览器里更流畅的进行三维视觉化处理的工具。<br>在开始讲解WebGL前，我们需要先了解下canvas。</p>\n<h2 id=\"HTML5和canvas标签\"><a href=\"#HTML5和canvas标签\" class=\"headerlink\" title=\"HTML5和canvas标签\"></a>HTML5和canvas标签</h2><p>HTML5是近年来炒的很热的一个次世代HTML标准规格。<br>在HTML5上，我们可以使音频，图形等浏览内容，拥有更为丰富的表现形态。与传统规格相比，其增加了许多新的标签，并且现在很多浏览器也在渐渐支持这种规格。<br>其中，canvas是一个与图形界面相关的标签。正如其名，这个标签是主要用于绘制图形，图像，并且可以通过使用javascript进行相关操作。 由于我们今后要讲的WebGL也会用到canvas，所以在讲解WebGL前，咱先对canvas标签进行简要说明。</p>\n<h2 id=\"canvas标签的基础知识\"><a href=\"#canvas标签的基础知识\" class=\"headerlink\" title=\"canvas标签的基础知识\"></a>canvas标签的基础知识</h2><p>与以前的img一样，canvas也是用于指定一个任意大的矩形区域。<br>通过javascript，可以在矩形区域内自由绘制图形，文字等内容。 然后程序员可以根据需求，进行很灵活的操作，如给图形添加阴影，涂色，添加旋转等。另外，也可以对一些常用的图片格式(gif,jpg,png等)，进行图像处理。<br>虽然使用javascript可以实现一般图形的高速绘制，然而，如果我们不使WebGL的话，与一般的软件相比，图形将会欠缺渲染，看起来总有种违和感。</p>\n<h2 id=\"WebGL和canvas\"><a href=\"#WebGL和canvas\" class=\"headerlink\" title=\"WebGL和canvas\"></a>WebGL和canvas</h2><p>在WebGL出现之前，也有很多需要大量绘制图形的网站，比如网页游戏，但是由于浏览器支持，网速等很多原因，这些游戏很多都是2d界面。<br>与之相比，WebGL最大的亮点就是可以在canvas中绘制3D图形。于是使得网页游戏由2d转变成3d成为可能；同时，在不远的未来，我们也有望在玩游戏时，不需要下载几十G的客户端，只需打开网页，登陆账号密码，即可玩大型3d游戏。</p>\n","categories":["Web开发"],"tags":["教程","WebGL"]},{"title":"正确姿势上网-搭建自己的VPN","url":"http://yoursite.com/2017/08/08/正确姿势上网-搭建自己的VPN/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>之前买的天行VPN最近也上不去了，可惜了我那半年会员。<br>天朝的墙是越修越高，却依然阻止不了咱加入“自由之翼”，去探索墙外风光。<br>市面上的VPN加速器很多，但没准哪天也会被封，还是自己搭个VPN靠谱。</p>\n<h2 id=\"一-购买VPS\"><a href=\"#一-购买VPS\" class=\"headerlink\" title=\"一.购买VPS\"></a>一.购买VPS</h2><ol>\n<li>VPS主机种类很多，价格也参差不齐，选择适合自己的就好，推荐使用国外服务器，线路比较友好。</li>\n<li>联通建议搬瓦工(Bandwagon)及<a href=\"https://www.uoax.club/1944.htm\" target=\"_blank\" rel=\"external\">购买教程</a>，移动建议Vultr及<a href=\"https://www.uoax.club/1971.htm\" target=\"_blank\" rel=\"external\">购买教程</a>。(都在用烂中。。。)更多参考知乎答案：<a href=\"https://www.zhihu.com/question/20784987\" target=\"_blank\" rel=\"external\">适合个人用，速度快的海外VPS</a></li>\n<li>系统要求用CentOS （一般都可选，如果不提供的话请联系服务商的管理员；或者可自行重装为CentOS 32或64位）</li>\n<li>内存要求≥128M （当然越大越好，看视频无压力）</li>\n</ol>\n<h2 id=\"二-VPS连接\"><a href=\"#二-VPS连接\" class=\"headerlink\" title=\"二.VPS连接\"></a>二.VPS连接</h2><ol>\n<li>购买VPS后，可以在管理页面(Management或者Setting)，看到你的VPS信息，包括IP地址，用户名，密码等。</li>\n<li>我们将使用Putty软件连接VPS，Putty<a href=\"www.putty.org\">官网地址</a>，懒人可以用<a href=\"http://pan.baidu.com/s/1ntG7j4H\" target=\"_blank\" rel=\"external\">百度网盘下载</a>。</li>\n<li>运行Putty，在Host Name输入购买服务器的IP地址，Post为22，连接类型(Connection type)选SSH，点击Open即可连接，如下图所示：<div align=\"center\"><br><img src=\"/2017/08/08/正确姿势上网-搭建自己的VPN/1.png\" width=\"400\"><br></div></li>\n<li>在新打开的命令行界面中输入用户名及密码，这里需要<strong>注意</strong>的是：密码是不会显示的，正确的做法是复制购买服务器的密码，鼠标移到绿色框内单机右键，回车即可。如下图：<div align=\"center\"><br><img src=\"/2017/08/08/正确姿势上网-搭建自己的VPN/2.png\" width=\"500\"><br></div></li>\n<li>一键部署VPS<br>复制下面代码，绿色光标处单击右键，回车，中间一路回车，选择默认安装即可。<br>wget –no-check-certificate <a href=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</a><br>chmod +x shadowsocks.sh<br>./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log<br>出现下图界面表示部署成功。<br><div align=\"center\"><br><img src=\"/2017/08/08/正确姿势上网-搭建自己的VPN/3.png\" width=\"500\"><br></div><h2 id=\"三-翻墙\"><a href=\"#三-翻墙\" class=\"headerlink\" title=\"三.翻墙\"></a>三.翻墙</h2></li>\n<li>推荐使用Shadowsocks代理软件翻墙，相关版本可在<a href=\"https://teddysun.com/342.html\" target=\"_blank\" rel=\"external\">Shadowsocks下载</a>选择下载。</li>\n<li>shadowsocks打开后界面如下所示，输入上图的IP，端口，密码，加密方式等，点击确定即可。以后要翻墙时打开shadowsocks，便可直接上网。<div align=\"center\"><br><img src=\"/2017/08/08/正确姿势上网-搭建自己的VPN/4.jpg\" width=\"500\"><br></div>\n</li>\n</ol>\n","categories":["VPN"],"tags":["DIY","教程"]},{"title":"男人身上最性感的7块肌肉与其及锻炼方法","url":"http://yoursite.com/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/","content":"<div align=\"center\"><br>肌肉是男人来说是最好的外套！<br><br>穿衣显瘦，脱衣有肉<br><br>性感的线条无疑能俘获很多迷妹的心！<br><br>一起来看看<br><br>到底男人身上最具杀伤力的肌肉<br><br>都是哪部分<br><br>另附锻炼图解<br><br><font color=\"#FF6600\">NO.7 大腿</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body1.jpg\" width=\"500\"><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body2.jpg\" width=\"500\"><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body3.jpg\" width=\"500\"><br></div><br>正所谓美不美，看大腿，男人也是如此。但许多汉子却忽视了腿部肌肉的锻炼，导致上身很魁梧，下半身却是一双纤细的竹竿！要知道，粗壮且线条性感的腿部是男人某能力的重要象征！<br><div align=\"center\"><br><font color=\"#FF6600\">锻炼方法▼</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/train1.jpg\" width=\"500\"><br><br><font color=\"#FF6600\">NO.6 三角肌</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body4.jpg\" width=\"500\"><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body5.jpg\" width=\"500\"><br></div>\n\n<p>三角肌的大小决定了你的肩膀是否饱满，两颗球形肩膀是很多健身男人梦寐以求的，也是完美的衣服架子，肩膀更立体，整个人气质都不一样。</p>\n<div align=\"center\"><br><font color=\"#FF6600\">锻炼方法▼</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/train2.jpg\" width=\"500\"><br><br><font color=\"#FF6600\">NO.5 背阔肌</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body6.jpg\" width=\"500\"><br></div><br>背部绝对不亚于胸部肌肉的重要性的，V字形背部是结实男人的重要标志，而一副让人尖叫的倒三角身材更是男神的标配！<br><div align=\"center\"><br><font color=\"#FF6600\">锻炼方法▼</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/train3.jpg\" width=\"500\"><br><br><font color=\"#FF6600\">NO.4 肱二头肌</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body7.jpg\" width=\"500\"><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body8.jpg\" width=\"500\"><br></div><br>手臂壮不壮，关键看二头肌！你尝试过用手臂把袖管撑满的感觉吗？尤其在穿T恤的时候，短袖包裹着鼓鼓的二头肌，阳刚气质瞬间飙升，姑娘们瞬间化身迷妹！<br><div align=\"center\"><br><font color=\"#FF6600\">锻炼方法▼</font><br>（含三头肌）<br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/train4.jpg\" width=\"500\"><br><br><font color=\"#FF6600\">NO.3 臀大肌</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body9.jpg\" width=\"500\"><br><br></div><br>臀翘了，不仅穿裤子更有型，而且练习翘臀的深蹲姿势也是提高男人战斗力的王牌动作！<br><div align=\"center\"><br><font color=\"#FF6600\">锻炼方法▼</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/train5.jpg\" width=\"500\"><br><br><font color=\"#FF6600\">NO.2 胸大肌</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body10.jpg\" width=\"500\"><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body11.jpg\" width=\"500\"><br></div><br>男人最性感肌肉排名第二！饱满胸肌不仅对妹子而言，手感十足。而且在衣服的掩盖下，胸肌是最直观能看出形状的，第一时间吸引对方的注意力，大胸器必备！<br><div align=\"center\"><br><font color=\"#FF6600\">锻炼方法▼</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/train6.jpg\" width=\"500\"><br><br><font color=\"#FF6600\">NO.1 腹肌</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body12.jpg\" width=\"500\"><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/body13.jpg\" width=\"500\"><br></div><br>人鱼线、马甲线都是腹肌的一部分。腹肌是男人身上最性感的部位，很多妹子看到有腹肌的男生就会走不动。腹肌也是低体脂率的代表，饱满的腹肌不是轻易就能拥有的，这也是男人充满毅力的标志！<br><div align=\"center\"><br><font color=\"#FF6600\">锻炼方法▼</font><br><br><img src=\"/2017/06/21/男人身上最性感的7块肌肉与其及锻炼方法/train7.jpg\" width=\"500\"><br></div>","categories":["收藏"],"tags":["健身"]},{"title":"人生最重要的三种能力，不是读书能学来的","url":"http://yoursite.com/2017/06/17/人生最重要的三种能力，不是读书能学来的/","content":"<h1 id=\"人生最重要的三种能力\"><a href=\"#人生最重要的三种能力\" class=\"headerlink\" title=\"人生最重要的三种能力\"></a>人生最重要的三种能力</h1><p>来源 | 肥肥猫的小酒馆（ID：zhihufeifeimao）</p>\n<div align=\"center\"><br><img src=\"/2017/06/17/人生最重要的三种能力，不是读书能学来的/book.jpg\" alt=\"\"><br></div><br>书上找不到，也很少有人讨论的个人素质，我认为有以下三种：<br><br>1. 人际交往中的期望值管理能力<br>2. 阈值自控意识<br>3. 应对主观时空扭曲的能力<br><br>## 1. 期望值管理能力<br>影视剧中往往有这样的观感：一个地痞或者土匪，平日无恶不作。到了最后一集，哎，这货突然抗日了，例如《大宅门》里的三爷。<br><br><strong>这时候观众对其好感度会突然爆棚，甚至超过许多没有爆点的正面角色，前几十集的劣迹简直一笔勾销。</strong><br><br>这就是期望值在前期被编剧压低之后的福利。<br><br>先记住一个公式：<br><div align=\"center\"><br><img src=\"/2017/06/17/人生最重要的三种能力，不是读书能学来的/happiness.jpg\" width=\"400\" height=\"400\"><br>快乐值 = 现实 - 期望值<br></div>\n\n<p>我们刚进入一个团队时，如果一开始就大招尽出，会导致周围人和领导对你的期望值不断升高。</p>\n<p>最后总会有一次你满足不了对方的要求，这时候对你的负面评价也会随之而起，甚至会低过一直表现平平的同仁。</p>\n<p>有人将其总结为<strong>“不胜任陷阱”</strong>，因为在一个上升通道中，只要达到了上层的期望，就会被继续提拔。</p>\n<p><strong>直到提拔到一个你不能胜任的岗位，让所有人失望，这个升迁过程才会结束。</strong></p>\n<p>这一点在情场上也依然适用，你会发现浪子回头会获得相当的赞美，许多女人甚至可以不计较你之前是个多么烂的人；</p>\n<p>但老实巴交的“好好男人”一旦被抓到一次不老实就立刻被打入“渣男”的行列再也不得翻身。</p>\n<p>娱乐圈这样的例子去年今年都有，不用我再赘述。</p>\n<p>这就需要我们对别人对我们的期望值进行有效管理。</p>\n<p><strong>比较常见的手段是憋大招，有一些在对方期待之外的东西不到关键时刻不能随便拿出来用。</strong></p>\n<p>但周围人也不是傻瓜，次数多了，别人都会倾向于相信你藏着一手。</p>\n<p>例如学生时代那些永远叫嚷着这次考砸了的第一名们，信誉早已破产，其他人对其期望值仍然在持续上升，这时候承受的压力可想而知。</p>\n<p><strong>要真正做到有效控制周围人对你的期望值，需要做到真正无迹可寻，并在所有非必要的时刻压抑自己的表现欲与虚荣心。</strong></p>\n<p>我认为这是进入职场的第一课。</p>\n<h2 id=\"2-阈值自控意识\"><a href=\"#2-阈值自控意识\" class=\"headerlink\" title=\"2. 阈值自控意识\"></a>2. 阈值自控意识</h2><p>阈值又叫临界值，指释放一个行为反应所需要的最小刺激强度。</p>\n<p>我大概六七年在网上发过一篇文章，可能很多人以前都看过了，这里引用其中一段：</p>\n<p>　<em>A片害了无数正常的男青年，没有A片的岁月里，男孩子满脑邪念充盈。</em></p>\n<p>　<em>可是在这个网络色情泛滥的当今，他们居然对生活中的女人没了想法，这不能不成为信息时代人类异化的经典案例。</em></p>\n<p>　<em>何以至此？阈值使然。也就是不断的持续刺激，抬高了男人们欲望的触发点。</em></p>\n<p>　<em>上个世纪初女人旗袍坐下时偶尔可一瞥的白花花大腿就可以触发老夫子们的欲念；可是100年后，看着满屏的器官进出，很多人居然会叹上一句：没意思。</em></p>\n<p><strong>这就是时代的变迁，使得阈值不断上升的最好例证。</strong></p>\n<p>举个极端的例子，释迦牟尼本是个迦毗罗卫国的王子，很早就过着锦衣玉食的生活。其父为其修筑春、夏、冬三幢宫殿。但他活的很厌世。其父为其选来印度最妖艳美丽的女子来取悦他。</p>\n<p>但是美酒美女对他的边际效用已经小到忽略，食欲肉欲的一切无法使他获得更高的满足，只有离开世俗创造佛教去了。</p>\n<p><strong>他一出生就享受物质的极大满足，导致他的阈值高到普通人难以想象的程度，最后凡是物质都无法使他快活。</strong></p>\n<p>中国的例子是贾宝玉，从小活在女人堆里，最后也做和尚去了，反而自小出家的人却未必能忘俗。</p>\n<p>所以施耐庵会有和尚最淫一说，潘巧云与裴如海那一段有很精妙的点评。</p>\n<p>盖因自幼出家的人，从未享受过世俗的快感，所以阈值很低，一点就着。</p>\n<p>能大彻大悟的慧根人士，往往反而是富家子弟，也就不奇怪了。</p>\n<p>女人亦然。</p>\n<p>泛滥的韩剧将正常的女生活生生逼成大龄剩女，归根到底也是阈值作怪。</p>\n<p>本来少女看见年轻男子怀春，是老天爷安排的正常心理活动。现在这个自然的程序被突然打断，横插10部韩剧，部部男一号多金英俊完美，还有若干男二男三争抢。</p>\n<p>电视机前的女人们于是看傻了，爱情阈值被活生生地抬到天上，身边的男人自然再也看不上。</p>\n<p>当你深刻理解了阈值对个人幸福与快乐的影响后，你就知道这个概念不仅用在性和爱情上，更可以推广到人生幸福的方方面面。</p>\n<p><strong>了解边际效用递减的规律，并学会一定程度的禁欲和自控，是防止阈值升高的不二法门。</strong></p>\n<p><strong>这绝对是需要在人生早期就要着力培养和锻炼的素质与意识，尤其对于男性。</strong></p>\n<p>顺便提下，频繁观看色情片造成的过度刺激，会抑制大脑内对性刺激做出神经反应的奖赏机制。</p>\n<p>与药物成瘾相似，这种神经抑制会促使强迫的色情成瘾行为，并对正常的性意愿和性欲造成影响。可惜，对于有些人，这些话来的有点晚了：）</p>\n<p><div align=\"center\"><br><img src=\"/2017/06/17/人生最重要的三种能力，不是读书能学来的/beauty.jpg\" width=\"400\" height=\"600\"><br></div></p>\n<h2 id=\"3-应对主观时空扭曲的能力\"><a href=\"#3-应对主观时空扭曲的能力\" class=\"headerlink\" title=\"3. 应对主观时空扭曲的能力\"></a>3. 应对主观时空扭曲的能力</h2><p>这个概念有点玄。这里说的时空扭曲，指的是主观的时间流逝感觉随着年龄开始加速，而且一发不可收拾。</p>\n<p>相信大部分人都有这样的感觉，时间过得越来越快了。</p>\n<p>小学时是一个月一个月过，大学一学期一学期过，工作后就变成了一年一年过。</p>\n<p>越往上过的越快，问问你的父母，他们会告诉你十年一眨眼就没了，他们讨论着十几年二十年前的陈年旧事，好像就发生在昨天。</p>\n<p>我很早就开始研究抗衡这种时空扭曲的方法。</p>\n<p>我在网上找了一些解释，有一个说法比较有趣。</p>\n<p>　<em>“五岁的时候人的记忆有五年，这时候过一年，到六岁时，记忆增加了五分之一；六岁到七岁，记忆增加了六分之一；七岁到八岁记忆就只增加了七分之一。</em></p>\n<p>　<em>以此类推，到了二十岁的时候，过多一年，记忆便只增加二十分之一。</em></p>\n<p>　<em>这一年的时光虽然没变，但是参照物变了，所以大家就感觉时间过得快了。</em></p>\n<p>　<em>可能等你六十岁的的时候，过一年记忆只增加六十分之一，那时时间就过得更快了。”</em></p>\n<p>这个说法有一定的道理。</p>\n<p>如果你仔细回忆一下，会发现：</p>\n<p>童年的课间十分钟休息足够你从楼上跑下去玩儿点什么；</p>\n<p>但现在你坐在公司电脑前，才喝了杯热饮，把东西摊开准备干活，啥都没干呢一个小时就没了。</p>\n<p>小时候两个月的暑假特别漫长，现在的一个月不就是四个星期，一眨眼就没了。</p>\n<p>如果用记忆增量理论来解释，那就说明我们在成年后的工作和生活都是在简单重复，所以大脑中的“总数据”并没有像儿时那样处在迅猛增长的阶段。</p>\n<p>大脑处理今天的24小时，只需要动用几年前就已经存好的索引，驾轻就熟。</p>\n<p>总信息量几乎没有增加，你主观上感受到的“新东西”当然就少，而体验“新东西”恰恰是放慢主观时间的命门。</p>\n<p>套用知乎上“舒适区”的说法，<strong>要解决时空扭曲的问题，我们必须走出“熟悉区”，熟悉区是时空黑洞，会不断加速消耗，吞噬你的时间。</strong></p>\n<p>如果你走出办公室，去陌生的国度一个月，就会发现这一个月并没有像办公室里那样，星期三过完就差不多能指望星期天了，而是觉得比在办公室两个星期都要多，这便是对抗时空扭曲的一个例子。</p>\n<p>并不是只有旅游才能有这样的效果，你如果在自己身上多试验，会发现能找到很多适用于你个人的手段，但前提是你要有“摆脱熟悉区”的意识。</p>\n<p><strong>这是我认为人的一生所需要掌握的最重要能力之一，掌握了对抗时空扭曲的本领，你就能延长主观生命。</strong></p>\n","categories":["收藏"],"tags":["心理学"]},{"title":"Hexo 添加动态背景","url":"http://yoursite.com/2017/05/03/Hexo-添加动态背景/","content":"<h2 id=\"修改-layout-swig\"><a href=\"#修改-layout-swig\" class=\"headerlink\" title=\"修改_layout.swig\"></a>修改_layout.swig</h2><p>打开 <font color=\"#4169E1\">next/layout/_layout.swig</font></p>\n<p>在 &lt; /body&gt;之前添加代码(注意不要放在&lt; /head&gt;的后面)</p>\n<p>添加如下代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"线条设置\"><a href=\"#线条设置\" class=\"headerlink\" title=\"线条设置\"></a>线条设置</h2><p>如果感觉默认线条太多的话，可以按如下方式配置：</p>\n<p>在上一步 <font color=\"#4169E1\">_layout.swig</font>中的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>改为：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span></div><div class=\"line\">color=<span class=\"string\">\"0,0,255\"</span> opacity=<span class=\"string\">'0.7'</span> zIndex=<span class=\"string\">\"-2\"</span> count=<span class=\"string\">\"99\"</span> src=<span class=\"string\">\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"配置项说明\"><a href=\"#配置项说明\" class=\"headerlink\" title=\"配置项说明\"></a>配置项说明</h2><ul>\n<li><font color=\"#4169E1\">color</font> ：线条颜色, 默认: ‘0,0,0’；三个数字分别为(R,G,B)</li>\n<li><font color=\"#4169E1\">opacity</font>: 线条透明度（0~1）, 默认: 0.5</li>\n<li><font color=\"#4169E1\">count</font>: 线条的总数量, 默认: 150</li>\n<li><font color=\"#4169E1\">zIndex</font>: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1</li>\n</ul>\n","categories":["blog"],"tags":["DIY","教程"]},{"title":"Hexo+Github静态博客搭建笔记(Windows)","url":"http://yoursite.com/2017/04/24/Hexo-Github个人博客搭建详细说明/","content":"<h2 id=\"写在前面的话\"><a href=\"#写在前面的话\" class=\"headerlink\" title=\"写在前面的话\"></a><strong>写在前面的话</strong></h2><hr>\n<p>开始用Hexo和Github Page搭建自己的博客了，把踩过的雷，犯过的错总结并记录下来，以后备用，也同时给大家参考。本篇主要介绍：配置Hexo框架，部署到Github Page，域名注册及绑定等。</p>\n<h2 id=\"一-环境安装\"><a href=\"#一-环境安装\" class=\"headerlink\" title=\"一. 环境安装\"></a>一. 环境安装</h2><h3 id=\"1-安装Nodejs和Git\"><a href=\"#1-安装Nodejs和Git\" class=\"headerlink\" title=\"1.安装Nodejs和Git\"></a>1.安装Nodejs和Git</h3><p>在安装Hexo之前，我们先要安装Nodejs和Git(如果已经安装，直接跳到下一步)。<br>下载地址：<a href=\"http://www.runoob.com/nodejs/nodejs-install-setup.html\" target=\"_blank\" rel=\"external\"><font color=\"red\" style=\"font-size:16px\">Nodejs下载</font></a>以及<a href=\"http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html\" target=\"_blank\" rel=\"external\"><font color=\"red\" style=\"font-size:16px\">Git下载</font></a></p>\n<h4 id=\"验证安装是否成功。\"><a href=\"#验证安装是否成功。\" class=\"headerlink\" title=\"验证安装是否成功。\"></a>验证安装是否成功。</h4><p>在cmd命令指示符窗口输入：</p>\n<pre><code>git --version\nnode -v\n</code></pre><p>可以显示安装的git版本，出现如下输出表示安装成功：<br><img src=\"/2017/04/24/Hexo-Github个人博客搭建详细说明/1.PNG\" alt=\"\"></p>\n<h3 id=\"2-安装Hexo\"><a href=\"#2-安装Hexo\" class=\"headerlink\" title=\"2.安装Hexo\"></a>2.安装Hexo</h3><p>  在任意文件夹(比如D:/hexo)，选择Git Bash Here，打开git命令窗口，输入：</p>\n<pre><code>npm install hexo-cli -g\n</code></pre><p>  得到如下所示界面：<br>  <img src=\"/2017/04/24/Hexo-Github个人博客搭建详细说明/2.PNG\" alt=\"\"><br>  接下来输入：</p>\n<pre><code>npm install hexo --save\n</code></pre><p>  你会看到窗口刷了一大堆白字。然后输入下面的指令:</p>\n<pre><code>hexo -v\n</code></pre><p>  当看到下面的输出时，表示安装成功。<br>  <img src=\"/2017/04/24/Hexo-Github个人博客搭建详细说明/3.PNG\" alt=\"\"></p>\n<h3 id=\"3-初始化Hexo\"><a href=\"#3-初始化Hexo\" class=\"headerlink\" title=\"3.初始化Hexo\"></a>3.初始化Hexo</h3><p>  接着上面操作，输入：</p>\n<pre><code>hexo init\n</code></pre><p>hexo会自动下载一些文件到这个目录，进行初始化,包括node_modules,目录结构如下：<br><img src=\"/2017/04/24/Hexo-Github个人博客搭建详细说明/7.png\" alt=\"\"><br> 然后输入：</p>\n<pre><code>npm install\n</code></pre><p>  之后npm将会自动安装所需要的组件，只需要等待npm操作即可。</p>\n<h3 id=\"4-测试\"><a href=\"#4-测试\" class=\"headerlink\" title=\"4.测试\"></a>4.测试</h3><p>  接下来，我们可以启动服务测试一下，在git命令框中输入：</p>\n<pre><code>hexo g\n</code></pre><p>  稍等片刻，然后输入：</p>\n<pre><code>hexo s\n</code></pre><p>  现在我们在浏览器中打开<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>已经可以看到一篇内置的blog了。</p>\n<p><font color=\"red\" style=\"font-size:16px\">注意：</font>这里值得注意的是，以后在更新博客时，也要在博客源文件所在文件夹右键选择Git Bash Here，定位路径到此文件中，hexo g和hexo d才可以生效。</p>\n<p>另外，hexo s是开启本地服务器，打开浏览器访问<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a>即可看到内容，</p>\n<h2 id=\"二-部署到Github-Page\"><a href=\"#二-部署到Github-Page\" class=\"headerlink\" title=\"二. 部署到Github Page\"></a>二. 部署到Github Page</h2><p>打开<a href=\"https://github.com\" target=\"_blank\" rel=\"external\"><font color=\"red\" style=\"font-size:16px\">https://github.com</font></a> 登录(或注册)账号。</p>\n<h3 id=\"1-创建仓库\"><a href=\"#1-创建仓库\" class=\"headerlink\" title=\"1.创建仓库\"></a>1.创建仓库</h3><p>点击页面右上角加号，选择New repository，进入代码库创建页面。在Repository name下填写<font color=\"#4169E1\">yourname.github.io</font>,比如，你的github用户名是test，那么就新建<font color=\"#4169E1\">test.github.io</font>的仓库,以后便可以通过<font color=\"#4169E1\"> <a href=\"http://test.github.io\" target=\"_blank\" rel=\"external\">http://test.github.io</a> </font>来访问你的博客了。也就是说，每一个github账户只能创建一个这样可以直接使用域名访问的仓库。</p>\n<p>这里需要注意的是：</p>\n<pre><code>1.注册的邮箱一定要通过验证，否则不会成功；\n2.仓库名字必须是：username.github.io, 这里的username是你的github用户名；\n</code></pre><h3 id=\"2-绑定域名\"><a href=\"#2-绑定域名\" class=\"headerlink\" title=\"2.绑定域名\"></a>2.绑定域名</h3><p>创建仓库后，默认的博客地址是<font color=\"#4169E1\">xxx.github.io</font>，如果有自己的域名，也可以绑定域名，实现链接跳转。</p>\n<p>这里的域名分为两种情况：带www和不带www。</p>\n<p>域名配置最常见有2种方式，CNAME和A记录。CNAME填写域名，A记录填写IP，由于不带www方式的域名只能采用A记录，所以必须先ping一下<font color=\"#4169E1\">username.github.io</font>的IP，然后带你的域名DNS设置页，讲A记录指向你ping出来的IP，并将CNAME指向<font color=\"#4169E1\">username.github.io</font>，这样可以保证无论是否添加www都可以访问，如下：<br> <img src=\"/2017/04/24/Hexo-Github个人博客搭建详细说明/4.png\" alt=\"\"><br>然后到你的github项目根目录新建一个名为CNAME的文件，里面填写你自己的域名，加不加www没有影响。</p>\n<p>另外，绑定新域名后，原来的<font color=\"#4169E1\">username.github.io</font>并没有失效，而是会自动跳转到你的新域名上。</p>\n<h3 id=\"3-配置SSH-key\"><a href=\"#3-配置SSH-key\" class=\"headerlink\" title=\"3.配置SSH key\"></a>3.配置SSH key</h3><p>配置ssh key是为了解决本地和服务器的链接问题。</p>\n<p>首先打开git界面，输入：</p>\n<pre><code>cd ~/.ssh \n</code></pre><p>检查本地已存在的ssh密钥，如果提示：No such file or directory说明你是第一次使用git。</p>\n<p>之后输入：</p>\n<pre><code>ssh-keygen -t rsa -C &quot;邮箱地址&quot;\n</code></pre><p>然后连续回车3次，最终会生成一个文件在用户目录下，打开用户目录，找到 <font color=\"#4169E1\">.ssh\\id_rsa.pub</font> 文件，打开并复制里面的内容，打开github主页，在右上角头像图标下，进入Setting-&gt;SSH and GPG keys-&gt;New SSH key:<br><img src=\"/2017/04/24/Hexo-Github个人博客搭建详细说明/5.PNG\" alt=\"\"><br>将粘贴内容复制到key里，添加title，保存。</p>\n<h4 id=\"测试是否链接成功\"><a href=\"#测试是否链接成功\" class=\"headerlink\" title=\"测试是否链接成功\"></a>测试是否链接成功</h4><p>输入：</p>\n<pre><code>ssh -T git@github.com     #邮箱地址不用改\n</code></pre><p>出现如下信息，说明SSH配置成功。<br><img src=\"/2017/04/24/Hexo-Github个人博客搭建详细说明/6.PNG\" alt=\"\"></p>\n<h3 id=\"4-配置Git个人信息：\"><a href=\"#4-配置Git个人信息：\" class=\"headerlink\" title=\"4.配置Git个人信息：\"></a>4.配置Git个人信息：</h3><p>设置git的用户名和邮箱</p>\n<pre><code>git config --global user.name &quot;你的github用户名&quot;\ngit config --global user.email &quot;你的github注册邮箱&quot;\n</code></pre><p>即可。</p>\n<h3 id=\"5-配置Deployment\"><a href=\"#5-配置Deployment\" class=\"headerlink\" title=\"5.配置Deployment\"></a>5.配置Deployment</h3><p>在_config.yml文件中，找到Deployment，然后按照如下修改，yourname处改成你的用户名：</p>\n<pre><code>deploy:\n      type: git\n      repo: git@github.com:yourname/yourname.github.io.git\n      branch: master\n</code></pre><h3 id=\"6-写博客发布\"><a href=\"#6-写博客发布\" class=\"headerlink\" title=\"6.写博客发布\"></a>6.写博客发布</h3><p>可通过如下命令新建一篇博客文章：</p>\n<pre><code>hexo new post &quot;article title&quot;\n</code></pre><p>这时候在我的电脑的目录下 F:\\hexo\\source\\ _posts 将会看到 article title.md 文件</p>\n<p>用MarkDown编辑器打开就可以编辑文章了。文章编辑好之后，运行生成、部署命令：</p>\n<pre><code>hexo g   // 生成\nhexo d   // 部署\n</code></pre><p>然后就可以访问你的网址了。</p>\n<h2 id=\"三-修改主题\"><a href=\"#三-修改主题\" class=\"headerlink\" title=\"三. 修改主题\"></a>三. 修改主题</h2><p>默认的主题很丑很大众，我们当然想要写个性的主题，可以到 <a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"external\">官方主题</a> 下载。</p>\n<h3 id=\"1-主题下载\"><a href=\"#1-主题下载\" class=\"headerlink\" title=\"1.主题下载\"></a>1.主题下载</h3><p>这里以NexT主题为例。</p>\n<p>首先下载这个主题。</p>\n<pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>下载的主题都在hexo-&gt;themes文件夹中。</p>\n<p>把<font color=\"#4169E1\">_config.yml</font>中的<font color=\"#4169E1\">theme:landscape</font>改为<font color=\"#4169E1\">theme:next</font>，然后重新执行<font color=\"#4169E1\">hexo g</font>重新关联主题即可。</p>\n<p>接下来我们将要更改一些主题的设定，包括个性化以及集成第三方服务。</p>\n<h3 id=\"2-添加插件\"><a href=\"#2-添加插件\" class=\"headerlink\" title=\"2.添加插件\"></a>2.添加插件</h3><p>官方<a href=\"https://hexo.io/plugins/\" target=\"_blank\" rel=\"external\">Plugins</a>，安装插件，按需添加博客功能。</p>\n","categories":["blog"],"tags":["DIY","教程"]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]}]