[{"title":"Hexo 添加动态背景","url":"http://yoursite.com/2017/08/03/Hexo-添加动态背景/","content":"<h2 id=\"修改-layout-swig\"><a href=\"#修改-layout-swig\" class=\"headerlink\" title=\"修改_layout.swig\"></a>修改_layout.swig</h2><p>打开 <font color=\"#4169E1\">next/layout/_layout.swig</font></p>\n<p>在 &lt; /body&gt;之前添加代码(注意不要放在&lt; /head&gt;的后面)</p>\n<p>添加如下代码：</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;\n</code></pre><h2 id=\"线条设置\"><a href=\"#线条设置\" class=\"headerlink\" title=\"线条设置\"></a>线条设置</h2><p>如果感觉默认线条太多的话，可以按如下方式配置：</p>\n<p>在上一步 <font color=\"#4169E1\">_layout.swig</font>中的代码：</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;\n</code></pre><p>改为：</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot;\ncolor=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;\n</code></pre><h2 id=\"配置项说明\"><a href=\"#配置项说明\" class=\"headerlink\" title=\"配置项说明\"></a>配置项说明</h2><ul>\n<li><font color=\"#4169E1\">color</font> ：线条颜色, 默认: ‘0,0,0’；三个数字分别为(R,G,B)</li>\n<li><font color=\"#4169E1\">opacity</font>: 线条透明度（0~1）, 默认: 0.5</li>\n<li><font color=\"#4169E1\">count</font>: 线条的总数量, 默认: 150</li>\n<li><font color=\"#4169E1\">zIndex</font>: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1</li>\n</ul>\n","categories":["blog"],"tags":["-DIY -教程"]},{"title":"Hexo+Github静态博客搭建笔记(Windows)","url":"http://yoursite.com/2017/04/24/Hexo-Github个人博客搭建详细说明/","content":"<h2 id=\"写在前面的话\"><a href=\"#写在前面的话\" class=\"headerlink\" title=\"写在前面的话\"></a><strong>写在前面的话</strong></h2><hr>\n<p>开始用Hexo和Github Page搭建自己的博客了，把踩过的雷，犯过的错总结并记录下来，以后备用，也同时给大家参考。本篇主要介绍：配置Hexo框架，部署到Github Page，域名注册及绑定等。</p>\n<h2 id=\"一-环境安装\"><a href=\"#一-环境安装\" class=\"headerlink\" title=\"一. 环境安装\"></a>一. 环境安装</h2><h4 id=\"1-安装Nodejs和Git\"><a href=\"#1-安装Nodejs和Git\" class=\"headerlink\" title=\"1.安装Nodejs和Git\"></a>1.安装Nodejs和Git</h4><p>在安装Hexo之前，我们先要安装Nodejs和Git(如果已经安装，直接跳到下一步)。<br>下载地址：<a href=\"http://www.runoob.com/nodejs/nodejs-install-setup.html\" target=\"_blank\" rel=\"external\"><font color=\"red\" style=\"font-size:16px\">Nodejs下载</font></a>以及<a href=\"http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html\" target=\"_blank\" rel=\"external\"><font color=\"red\" style=\"font-size:16px\">Git下载</font></a></p>\n<h5 id=\"验证安装是否成功。\"><a href=\"#验证安装是否成功。\" class=\"headerlink\" title=\"验证安装是否成功。\"></a>验证安装是否成功。</h5><p>在cmd命令指示符窗口输入：</p>\n<pre><code>git --version\nnode -v\n</code></pre><p>可以显示安装的git版本，出现如下输出表示安装成功：<br><img src=\"/my_pic/1.PNG\" alt=\"\"></p>\n<h4 id=\"2-安装Hexo\"><a href=\"#2-安装Hexo\" class=\"headerlink\" title=\"2.安装Hexo\"></a>2.安装Hexo</h4><p>  在任意文件夹(比如D:/hexo)，选择Git Bash Here，打开git命令窗口，输入：</p>\n<pre><code>npm install hexo-cli -g\n</code></pre><p>  得到如下所示界面：<br>  <img src=\"/my_pic/2.PNG\" alt=\"\"><br>  接下来输入：</p>\n<pre><code>npm install hexo --save\n</code></pre><p>  你会看到窗口刷了一大堆白字。然后输入下面的指令:</p>\n<pre><code>hexo -v\n</code></pre><p>  当看到下面的输出时，表示安装成功。<br>  <img src=\"/my_pic/3.PNG\" alt=\"\"></p>\n<h4 id=\"3-初始化Hexo\"><a href=\"#3-初始化Hexo\" class=\"headerlink\" title=\"3.初始化Hexo\"></a>3.初始化Hexo</h4><p>  接着上面操作，输入：</p>\n<pre><code>hexo init\n</code></pre><p>hexo会自动下载一些文件到这个目录，进行初始化,包括node_modules,目录结构如下：<br><img src=\"/my_pic/7.png\" alt=\"\"><br> 然后输入：</p>\n<pre><code>npm install\n</code></pre><p>  之后npm将会自动安装所需要的组件，只需要等待npm操作即可。</p>\n<h4 id=\"4-测试\"><a href=\"#4-测试\" class=\"headerlink\" title=\"4.测试\"></a>4.测试</h4><p>  接下来，我们可以启动服务测试一下，在git命令框中输入：</p>\n<pre><code>hexo g\n</code></pre><p>  稍等片刻，然后输入：</p>\n<pre><code>hexo s\n</code></pre><p>  现在我们在浏览器中打开<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>已经可以看到一篇内置的blog了。</p>\n<p><font color=\"red\" style=\"font-size:16px\">注意：</font>这里值得注意的是，以后在更新博客时，也要在博客源文件所在文件夹右键选择Git Bash Here，定位路径到此文件中，hexo g和hexo d才可以生效。</p>\n<p>另外，hexo s是开启本地服务器，打开浏览器访问<a href=\"http://localhost:4000即可看到内容，\" target=\"_blank\" rel=\"external\">http://localhost:4000即可看到内容，</a></p>\n<h2 id=\"二-部署到Github-Page\"><a href=\"#二-部署到Github-Page\" class=\"headerlink\" title=\"二. 部署到Github Page\"></a>二. 部署到Github Page</h2><p>打开<a href=\"https://github.com\" target=\"_blank\" rel=\"external\"><font color=\"red\" style=\"font-size:16px\">https://github.com</font></a> 登录(或注册)账号。</p>\n<h4 id=\"1-创建仓库\"><a href=\"#1-创建仓库\" class=\"headerlink\" title=\"1.创建仓库\"></a>1.创建仓库</h4><p>点击页面右上角加号，选择New repository，进入代码库创建页面。在Repository name下填写<font color=\"#4169E1\">yourname.github.io</font>,比如，你的github用户名是test，那么就新建<font color=\"#4169E1\">test.github.io</font>的仓库,以后便可以通过<font color=\"#4169E1\"> <a href=\"http://test.github.io\" target=\"_blank\" rel=\"external\">http://test.github.io</a> </font>来访问你的博客了。也就是说，每一个github账户只能创建一个这样可以直接使用域名访问的仓库。</p>\n<p>这里需要注意的是：</p>\n<pre><code>1.注册的邮箱一定要通过验证，否则不会成功；\n2.仓库名字必须是：username.github.io, 这里的username是你的github用户名；\n</code></pre><h4 id=\"2-绑定域名\"><a href=\"#2-绑定域名\" class=\"headerlink\" title=\"2.绑定域名\"></a>2.绑定域名</h4><p>创建仓库后，默认的博客地址是<font color=\"#4169E1\">xxx.github.io</font>，如果有自己的域名，也可以绑定域名，实现链接跳转。</p>\n<p>这里的域名分为两种情况：带www和不带www。</p>\n<p>域名配置最常见有2种方式，CNAME和A记录。CNAME填写域名，A记录填写IP，由于不带www方式的域名只能采用A记录，所以必须先ping一下<font color=\"#4169E1\">username.github.io</font>的IP，然后带你的域名DNS设置页，讲A记录指向你ping出来的IP，并将CNAME指向<font color=\"#4169E1\">username.github.io</font>，这样可以保证无论是否添加www都可以访问，如下：<br> <img src=\"/my_pic/4.PNG\" alt=\"\"><br>然后到你的github项目根目录新建一个名为CNAME的文件，里面填写你自己的域名，加不加www没有影响。</p>\n<p>另外，绑定新域名后，原来的<font color=\"#4169E1\">username.github.io</font>并没有失效，而是会自动跳转到你的新域名上。</p>\n<h4 id=\"3-配置SSH-key\"><a href=\"#3-配置SSH-key\" class=\"headerlink\" title=\"3.配置SSH key\"></a>3.配置SSH key</h4><p>配置ssh key是为了解决本地和服务器的链接问题。</p>\n<p>首先打开git界面，输入：</p>\n<pre><code>cd ~/.ssh \n</code></pre><p>检查本地已存在的ssh密钥，如果提示：No such file or directory说明你是第一次使用git。</p>\n<p>之后输入：</p>\n<pre><code>ssh-keygen -t rsa -C &quot;邮箱地址&quot;\n</code></pre><p>然后连续回车3次，最终会生成一个文件在用户目录下，打开用户目录，找到 <font color=\"#4169E1\">.ssh\\id_rsa.pub</font> 文件，打开并复制里面的内容，打开github主页，在右上角头像图标下，进入Setting-&gt;SSH and GPG keys-&gt;New SSH key:<br><img src=\"/my_pic/5.png\" alt=\"\"><br>将粘贴内容复制到key里，添加title，保存。</p>\n<h5 id=\"测试是否链接成功\"><a href=\"#测试是否链接成功\" class=\"headerlink\" title=\"测试是否链接成功\"></a>测试是否链接成功</h5><p>输入：</p>\n<pre><code>ssh -T git@github.com     #邮箱地址不用改\n</code></pre><p>出现如下信息，说明SSH配置成功。<br><img src=\"/my_pic/6.png\" alt=\"\"></p>\n<h4 id=\"4-配置Git个人信息：\"><a href=\"#4-配置Git个人信息：\" class=\"headerlink\" title=\"4.配置Git个人信息：\"></a>4.配置Git个人信息：</h4><p>设置git的用户名和邮箱</p>\n<pre><code>git config --global user.name &quot;你的github用户名&quot;\ngit config --global user.email &quot;你的github注册邮箱&quot;\n</code></pre><p>即可。</p>\n<h4 id=\"5-配置Deployment\"><a href=\"#5-配置Deployment\" class=\"headerlink\" title=\"5.配置Deployment\"></a>5.配置Deployment</h4><p>在_config.yml文件中，找到Deployment，然后按照如下修改，yourname处改成你的用户名：</p>\n<pre><code>deploy:\n      type: git\n      repo: git@github.com:yourname/yourname.github.io.git\n      branch: master\n</code></pre><h4 id=\"6-写博客发布\"><a href=\"#6-写博客发布\" class=\"headerlink\" title=\"6.写博客发布\"></a>6.写博客发布</h4><p>可通过如下命令新建一篇博客文章：</p>\n<pre><code>hexo new post &quot;article title&quot;\n</code></pre><p>这时候在我的电脑的目录下 F:\\hexo\\source\\ _posts 将会看到 article title.md 文件</p>\n<p>用MarDown编辑器打开就可以编辑文章了。文章编辑好之后，运行生成、部署命令：</p>\n<pre><code>hexo g   // 生成\nhexo d   // 部署\n</code></pre><p>然后就可以访问你的网址了。</p>\n<h2 id=\"三-修改主题\"><a href=\"#三-修改主题\" class=\"headerlink\" title=\"三. 修改主题\"></a>三. 修改主题</h2><p>默认的主题很丑很大众，我们当然想要写个性的主题，可以到 <a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"external\">官方主题</a> 下载。</p>\n<h4 id=\"1-主题下载\"><a href=\"#1-主题下载\" class=\"headerlink\" title=\"1.主题下载\"></a>1.主题下载</h4><p>这里以NexT主题为例。</p>\n<p>首先下载这个主题。</p>\n<pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>下载的主题都在hexo-&gt;themes文件夹中。</p>\n<p>把<font color=\"#4169E1\">_config.yml</font>中的<font color=\"#4169E1\">theme:landscape</font>改为<font color=\"#4169E1\">theme:next</font>，然后重新执行<font color=\"#4169E1\">hexo g</font>重新关联主题即可。</p>\n<p>接下来我们将要更改一些主题的设定，包括个性化以及集成第三方服务。</p>\n<h4 id=\"2-添加插件\"><a href=\"#2-添加插件\" class=\"headerlink\" title=\"2.添加插件\"></a>2.添加插件</h4><p>官方<a href=\"https://hexo.io/plugins/\" target=\"_blank\" rel=\"external\">Plugins</a>，安装插件，增加博客趣味性。</p>\n","categories":["blog"],"tags":["DIY,教程"]},{"title":"Hello World","url":"http://yoursite.com/2017/04/22/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]}]